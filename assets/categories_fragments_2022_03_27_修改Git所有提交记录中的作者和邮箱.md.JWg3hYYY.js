import{_ as p}from"./chunks/ArticleMetadata.EniEqKqn.js";import{_ as h,D as r,o as t,c as o,I as k,w as c,k as n,a as _,R as d,b as F,e as g}from"./chunks/framework.FVQzxbLi.js";import"./chunks/md5.RtphNWHi.js";const G=JSON.parse('{"title":"修改Git所有提交记录中的作者和邮箱","description":"","frontmatter":{"title":"修改Git所有提交记录中的作者和邮箱","author":"查尔斯","date":"2022/03/27 13:00","categories":["杂碎逆袭史"],"tags":["Git"]},"headers":[],"relativePath":"categories/fragments/2022/03/27/修改Git所有提交记录中的作者和邮箱.md","filePath":"categories/fragments/2022/03/27/修改Git所有提交记录中的作者和邮箱.md","lastUpdated":1661780865000}'),u={name:"categories/fragments/2022/03/27/修改Git所有提交记录中的作者和邮箱.md"},m=n("h1",{id:"修改git所有提交记录中的作者和邮箱",tabindex:"-1"},[_("修改Git所有提交记录中的作者和邮箱 "),n("a",{class:"header-anchor",href:"#修改git所有提交记录中的作者和邮箱","aria-label":'Permalink to "修改Git所有提交记录中的作者和邮箱"'},"​")],-1),y=d(`<h2 id="前言" tabindex="-1">前言 <a class="header-anchor" href="#前言" aria-label="Permalink to &quot;前言&quot;">​</a></h2><p><strong>C：</strong> 上一篇，笔者介绍了怎么修改 Git 最后一次提交的作者和邮箱信息。那如果你是已经提交了很多次的记录，难道一个个的回退过去修改吗？显然不可能，所以本篇笔者带着大家认识一下如何批量修改 Git 提交记录中的作者和邮箱信息。</p><h2 id="问题解决" tabindex="-1">问题解决 <a class="header-anchor" href="#问题解决" aria-label="Permalink to &quot;问题解决&quot;">​</a></h2><p>解决方法其实就是编写一个脚本来进行批量替换。</p><ol><li><p>新建一个 sh / bat 格式的脚本文件（如果你是在 cmd 中执行，那就用 bat 格式，如果是在 git bash 中执行就用 sh）</p></li><li><p>复制下方脚本内容到脚本文件中，然后编辑替换好错误邮箱、正确作者和邮箱（如果是在 cmd 中执行，#!/bin/sh 就替换为 #!/bin/bat）</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">#!/bin/sh</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> filter-branch</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> --env-filter</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> &#39;</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">WRONG_EMAIL=&quot;错误的邮箱&quot;</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">NEW_NAME=&quot;正确的作者名&quot;</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">NEW_EMAIL=&quot;正确的邮箱&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">if [ &quot;$GIT_COMMITTER_EMAIL&quot; = &quot;$WRONG_EMAIL&quot; ]</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">then</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">    export GIT_COMMITTER_NAME=&quot;$NEW_NAME&quot;</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">    export GIT_COMMITTER_EMAIL=&quot;$NEW_EMAIL&quot;</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">fi</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">if [ &quot;$GIT_AUTHOR_EMAIL&quot; = &quot;$WRONG_EMAIL&quot; ]</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">then</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">    export GIT_AUTHOR_NAME=&quot;$NEW_NAME&quot;</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">    export GIT_AUTHOR_EMAIL=&quot;$NEW_EMAIL&quot;</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">fi</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&#39;</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> --tag-name-filter</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> cat</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> --</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> --branches</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> --tags</span></span></code></pre></div></li><li><p>保存脚本</p></li><li><p>将脚本文件放到要批量修改提交记录的 Git 仓库中（根目录就行）</p></li><li><p>执行脚本</p></li></ol><p>随后你就会看到，先是提示一个 warn 警告，然后它会一条条的修改以往提交记录，如果错误的提交比较多，那就耐心等一会儿吧。</p>`,6);function C(s,f,q,E,A,M){const e=p,l=r("ClientOnly");return t(),o("div",null,[m,k(l,null,{default:c(()=>{var a,i;return[(((a=s.$frontmatter)==null?void 0:a.aside)??!0)&&(((i=s.$frontmatter)==null?void 0:i.showArticleMetadata)??!0)?(t(),F(e,{key:0,article:s.$frontmatter},null,8,["article"])):g("",!0)]}),_:1}),y])}const N=h(u,[["render",C]]);export{G as __pageData,N as default};
