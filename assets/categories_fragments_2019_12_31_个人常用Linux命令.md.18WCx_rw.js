import{_ as r}from"./chunks/ArticleMetadata.EniEqKqn.js";import{_ as o,D as t,o as e,c,k as h,a as l,I as n,w as g,R as u,b as y,e as F}from"./chunks/framework.FVQzxbLi.js";import"./chunks/md5.RtphNWHi.js";const m="/assets/201912312031666.Y--7Iu1D.png",b="/assets/201912312031777.2j2lmfnd.png",C="/assets/201912312031888.QEBJqHwU.png",v="/assets/201912312031999.EQf4tV9O.png",D="/assets/201912312032666.eS3OHEyZ.png",f="/assets/201912312032777.mxlWgDCi.png",x="/assets/202209012051588.m0MxX_Or.png",R=JSON.parse('{"title":"个人常用 Linux 命令","description":"","frontmatter":{"title":"个人常用 Linux 命令","author":"查尔斯","date":"2019/12/31 21:00","isTop":true,"categories":["杂碎逆袭史"],"tags":["Linux"]},"headers":[],"relativePath":"categories/fragments/2019/12/31/个人常用Linux命令.md","filePath":"categories/fragments/2019/12/31/个人常用Linux命令.md","lastUpdated":1669526061000}'),A={name:"categories/fragments/2019/12/31/个人常用Linux命令.md"},P={id:"个人常用-linux-命令",tabindex:"-1"},q=h("a",{class:"header-anchor",href:"#个人常用-linux-命令","aria-label":'Permalink to "个人常用 Linux 命令 <Badge type="warning" text="持续更新" />"'},"​",-1),_=u(`<h2 id="系统相关" tabindex="-1">系统相关 <a class="header-anchor" href="#系统相关" aria-label="Permalink to &quot;系统相关&quot;">​</a></h2><div class="tip custom-block"><p class="custom-block-title">已测试系统</p><p>CentOS 7.5、8.2</p></div><h3 id="查询系统详情" tabindex="-1">查询系统详情 <a class="header-anchor" href="#查询系统详情" aria-label="Permalink to &quot;查询系统详情&quot;">​</a></h3><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;"># 详细输出所有信息，依次为内核名称，主机名，内核版本号，内核版本，硬件名，处理器类型，硬件平台类型，操作系统名称</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">uname</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> -a</span></span></code></pre></div><p><img src="`+m+`" alt="201912312031666"></p><h3 id="查询系统发行版本" tabindex="-1">查询系统发行版本 <a class="header-anchor" href="#查询系统发行版本" aria-label="Permalink to &quot;查询系统发行版本&quot;">​</a></h3><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;"># 只适合Redhat系的Linux</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">cat</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> /etc/redhat-release</span></span></code></pre></div><p><img src="`+b+`" alt="201912312031777"></p><h3 id="查看cpu信息" tabindex="-1">查看CPU信息 <a class="header-anchor" href="#查看cpu信息" aria-label="Permalink to &quot;查看CPU信息&quot;">​</a></h3><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;"># 逻辑CPU数量和CPU型号</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">cat</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> /proc/cpuinfo</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;"> grep</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> name</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;"> cut</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> -f2</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> -d:</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;"> uniq</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> -c</span></span></code></pre></div><p><img src="`+C+`" alt="201912312031888"></p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;"># CPU真实数量（有时候虽然逻辑CPU是8核，但可能是由两颗4核CPU构成的）</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">cat</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> /proc/cpuinfo</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;"> grep</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> physical</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;"> uniq</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> -c</span></span></code></pre></div><p><img src="`+v+`" alt="201912312031999"></p><h3 id="查询环境变量" tabindex="-1">查询环境变量 <a class="header-anchor" href="#查询环境变量" aria-label="Permalink to &quot;查询环境变量&quot;">​</a></h3><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">env</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;"># 过滤环境变量中的配置</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">env</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;"> grep</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> xxx</span></span></code></pre></div><h3 id="编辑环境变量" tabindex="-1">编辑环境变量 <a class="header-anchor" href="#编辑环境变量" aria-label="Permalink to &quot;编辑环境变量&quot;">​</a></h3><ol><li><p>编辑 /etc/profile 文件</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">vim</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> /etc/profile</span></span></code></pre></div></li><li><p>在文件末尾插入环境变量配置</p><p>打开编辑器后，按下 shift + g，跳转到文件末尾，按 o 进入插入模式，将下方配置插入进去后，按 ESC 进入一般模式，再按 :wq 保存并退出。</p><p>例如：插入 JAVA_HOME 环境变量配置</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">JAVA_HOME</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">/opt/disk/java/jdk1.8.0_202</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">CLASSPATH</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">.:</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">$JAVA_HOME</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">/lib.tools.jar</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">PATH</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">$JAVA_HOME</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">/bin:</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">$PATH</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">export</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> JAVA_HOME</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> CLASSPATH</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> PATH</span></span></code></pre></div></li><li><p>重新加载 /etc/profile 文件，使最新配置生效</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">source</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> /etc/profile</span></span></code></pre></div></li></ol><h3 id="查询端口占用" tabindex="-1">查询端口占用 <a class="header-anchor" href="#查询端口占用" aria-label="Permalink to &quot;查询端口占用&quot;">​</a></h3><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;"># 查询指定端口占用情况，还可以显示出占用该端口的进程 PID</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">netstat</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> -anp</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;"> grep</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> 端口号</span></span></code></pre></div><h3 id="查询程序位置" tabindex="-1">查询程序位置 <a class="header-anchor" href="#查询程序位置" aria-label="Permalink to &quot;查询程序位置&quot;">​</a></h3><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">whereis</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> 程序名</span></span></code></pre></div><h2 id="防火墙相关" tabindex="-1">防火墙相关 <a class="header-anchor" href="#防火墙相关" aria-label="Permalink to &quot;防火墙相关&quot;">​</a></h2><div class="tip custom-block"><p class="custom-block-title">已测试系统</p><p>CentOS 7.5、8.2</p></div><h3 id="查看防火墙状态" tabindex="-1">查看防火墙状态 <a class="header-anchor" href="#查看防火墙状态" aria-label="Permalink to &quot;查看防火墙状态&quot;">​</a></h3><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">systemctl</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> status</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> firewalld</span></span></code></pre></div><h3 id="开启防火墙" tabindex="-1">开启防火墙 <a class="header-anchor" href="#开启防火墙" aria-label="Permalink to &quot;开启防火墙&quot;">​</a></h3><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">systemctl</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> start</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> firewalld</span></span></code></pre></div><h3 id="关闭防火墙" tabindex="-1">关闭防火墙 <a class="header-anchor" href="#关闭防火墙" aria-label="Permalink to &quot;关闭防火墙&quot;">​</a></h3><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">systemctl</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> stop</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> firewalld</span></span></code></pre></div><h3 id="查看开放的端口列表" tabindex="-1">查看开放的端口列表 <a class="header-anchor" href="#查看开放的端口列表" aria-label="Permalink to &quot;查看开放的端口列表&quot;">​</a></h3><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">firewall-cmd</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> --zone=public</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> --list-ports</span></span></code></pre></div><h3 id="查看防火墙某个端口是否开放" tabindex="-1">查看防火墙某个端口是否开放 <a class="header-anchor" href="#查看防火墙某个端口是否开放" aria-label="Permalink to &quot;查看防火墙某个端口是否开放&quot;">​</a></h3><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">firewall-cmd</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> --query-port=端口号/tcp</span></span></code></pre></div><h3 id="开放端口" tabindex="-1">开放端口 <a class="header-anchor" href="#开放端口" aria-label="Permalink to &quot;开放端口&quot;">​</a></h3><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;"># 开放某个端口</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">firewall-cmd</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> --zone=public</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> --add-port=端口号/tcp</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> --permanent</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;"># 开放指定端口范围</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">firewall-cmd</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> --zone=public</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> --add-port=端口号起-端口号止/tcp</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> --permanent</span></span></code></pre></div><h3 id="关闭端口" tabindex="-1">关闭端口 <a class="header-anchor" href="#关闭端口" aria-label="Permalink to &quot;关闭端口&quot;">​</a></h3><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">firewall-cmd</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> --zone=public</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> --remove-port=端口号/tcp</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> --permanent</span></span></code></pre></div><h3 id="重启防火墙-防火墙配置立即生效" tabindex="-1">重启防火墙（防火墙配置立即生效） <a class="header-anchor" href="#重启防火墙-防火墙配置立即生效" aria-label="Permalink to &quot;重启防火墙（防火墙配置立即生效）&quot;">​</a></h3><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">firewall-cmd</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> --reload</span></span></code></pre></div><h2 id="系统服务相关" tabindex="-1">系统服务相关 <a class="header-anchor" href="#系统服务相关" aria-label="Permalink to &quot;系统服务相关&quot;">​</a></h2><div class="tip custom-block"><p class="custom-block-title">已测试系统</p><p>CentOS 7.5、8.2</p></div><h3 id="查看服务状态" tabindex="-1">查看服务状态 <a class="header-anchor" href="#查看服务状态" aria-label="Permalink to &quot;查看服务状态&quot;">​</a></h3><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">systemctl</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> status</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> 服务名</span></span></code></pre></div><h3 id="重新加载服务配置" tabindex="-1">重新加载服务配置 <a class="header-anchor" href="#重新加载服务配置" aria-label="Permalink to &quot;重新加载服务配置&quot;">​</a></h3><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">systemctl</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> daemon-reload</span></span></code></pre></div><h3 id="启动服务" tabindex="-1">启动服务 <a class="header-anchor" href="#启动服务" aria-label="Permalink to &quot;启动服务&quot;">​</a></h3><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">systemctl</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> start</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> 服务名</span></span></code></pre></div><h3 id="停止服务" tabindex="-1">停止服务 <a class="header-anchor" href="#停止服务" aria-label="Permalink to &quot;停止服务&quot;">​</a></h3><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">systemctl</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> stop</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> 服务名</span></span></code></pre></div><h3 id="重启服务" tabindex="-1">重启服务 <a class="header-anchor" href="#重启服务" aria-label="Permalink to &quot;重启服务&quot;">​</a></h3><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">systemctl</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> restart</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> 服务名</span></span></code></pre></div><h3 id="设置服务开机自启" tabindex="-1">设置服务开机自启 <a class="header-anchor" href="#设置服务开机自启" aria-label="Permalink to &quot;设置服务开机自启&quot;">​</a></h3><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;"># 开机自启</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">systemctl</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> enable</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> 服务名</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;"># 取消服务开机自启</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">systemctl</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> diable</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> 服务名</span></span></code></pre></div><h3 id="创建服务" tabindex="-1">创建服务 <a class="header-anchor" href="#创建服务" aria-label="Permalink to &quot;创建服务&quot;">​</a></h3><ol><li><p>创建并编辑服务文件</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">vim</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> /etc/systemd/system/服务名.service</span></span></code></pre></div></li><li><p>编写服务配置</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">[Unit]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">Description</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">服务描述</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">Wants</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">network-online.target</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">After</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">network-online.target</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">[Service]</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;"># 设置环境变量</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">Environment</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;xxx=xxx&quot;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;"># 设置服务执行命令或脚本</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">ExecStart</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">/bin/bash</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;"> xxx.sh</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">KillSignal</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">SIGTERM</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">[Install]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">WantedBy</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">multi-user.target</span></span></code></pre></div></li><li><p>重新加载服务配置</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">systemctl</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> daemon-reload</span></span></code></pre></div></li><li><p>启动服务</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code"><code><span class="line"><span>systemctl start 服务名</span></span></code></pre></div></li><li><p>设置服务开机自启</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">systemctl</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> enable</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> 服务名</span></span></code></pre></div></li></ol><h2 id="监控相关" tabindex="-1">监控相关 <a class="header-anchor" href="#监控相关" aria-label="Permalink to &quot;监控相关&quot;">​</a></h2><div class="tip custom-block"><p class="custom-block-title">已测试系统</p><p>CentOS 7.5、8.2</p></div><h3 id="查询ram信息-内存" tabindex="-1">查询RAM信息(内存) <a class="header-anchor" href="#查询ram信息-内存" aria-label="Permalink to &quot;查询RAM信息(内存)&quot;">​</a></h3><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;"># 用于查看有关系统 RAM 使用情况的信息（带大小单位）</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">free</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> -h</span></span></code></pre></div><p><img src="`+D+`" alt="201912312032666"></p><h3 id="查询rom信息-磁盘" tabindex="-1">查询ROM信息(磁盘) <a class="header-anchor" href="#查询rom信息-磁盘" aria-label="Permalink to &quot;查询ROM信息(磁盘)&quot;">​</a></h3><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;"># 以磁盘分区为单位查看文件系统，可以获取硬盘被占用了多少空间，目前还剩下多少空间等信息</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">df</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> -h</span></span></code></pre></div><p><img src="`+f+`" alt="201912312032777"></p><h3 id="查看当前进程状态" tabindex="-1">查看当前进程状态 <a class="header-anchor" href="#查看当前进程状态" aria-label="Permalink to &quot;查看当前进程状态&quot;">​</a></h3><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">ps</span></span></code></pre></div><h4 id="常见用法" tabindex="-1">常见用法 <a class="header-anchor" href="#常见用法" aria-label="Permalink to &quot;常见用法&quot;">​</a></h4><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;"># 查询指定进程</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">ps</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> -ef</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;"> grep</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> 进程关键字</span></span></code></pre></div><p>查询后我们往往还会使用 <code>kill</code> 或 <code>pkill</code> 命令来结束指定进程。</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;"># 通过进程ID，结束指定进程（-9代表无条件退出）</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">kill</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> -9</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> 进程ID</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;"># 通过进程名，结束指定进程</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;"># 例如：nginx启动后是两个进程，想要结束还需要分别 kill -9，直接 pkill -9 nginx 一次就搞定了</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">pkill</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> -9</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> 进程名</span></span></code></pre></div><h3 id="实时显示进程状态" tabindex="-1">实时显示进程状态 <a class="header-anchor" href="#实时显示进程状态" aria-label="Permalink to &quot;实时显示进程状态&quot;">​</a></h3><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;"># 空格键手动刷新，按 q 键退出</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">top</span></span></code></pre></div><div class="tip custom-block"><p class="custom-block-title">笔者说</p><p>top 命令也是用来查看进程状态的，相比于 ps 命令，top 命令不同之处如下：</p><ol><li>top 命令可以持续监视进程信息，ps 命令是进程运行情况的 &quot;快照&quot;</li><li>top 命令可以监视CPU负载、内存负载等综合系统信息</li><li>top 命令可以监视进程的CPU、内存占用情况，按占用资源的大小降序排列</li><li>top 命令可以操作进程，改变进程优先级</li></ol><p>简单记忆的话就是：ps 命令一般是用于查看某个进程是否在运行的命令，而 top 命令一般是用于查看哪些进程占用CPU、内存较高，好让我们能对它进行“优化”的命令。</p></div><p><img src="`+x+`" alt="202209012051588"></p><p>前 5 行是系统整体统计信息，包含系统情况、进程情况、CPU情况、内存情况在内的综合内容。</p><p>第 1 行是系统情况：</p><table><thead><tr><th style="text-align:left;">内容</th><th style="text-align:left;">含义</th></tr></thead><tbody><tr><td style="text-align:left;">20:49:35 up 199 days</td><td style="text-align:left;">当前系统时间及系统运行时长</td></tr><tr><td style="text-align:left;">2 users</td><td style="text-align:left;">当前登录用户数</td></tr><tr><td style="text-align:left;">load average: 0.01, 0.04, 0.05</td><td style="text-align:left;">系统负载，即任务队列的平均长度。 三个数值分别为 1分钟、5分钟、15分钟前到现在的平均值。</td></tr></tbody></table><p>第 2 行是进程情况：</p><table><thead><tr><th style="text-align:left;">内容</th><th style="text-align:left;">含义</th></tr></thead><tbody><tr><td style="text-align:left;">xxx total</td><td style="text-align:left;">进程总数</td></tr><tr><td style="text-align:left;">xxx running</td><td style="text-align:left;">正在运行的进程数</td></tr><tr><td style="text-align:left;">xxx sleeping</td><td style="text-align:left;">睡眠的进程数</td></tr><tr><td style="text-align:left;">xxx stopped</td><td style="text-align:left;">停止的进程数</td></tr><tr><td style="text-align:left;">xxx zombie</td><td style="text-align:left;">僵尸进程数</td></tr></tbody></table><p>第 3 行是 CPU 情况：（当有多个 CPU 时，会有多行显示）</p><table><thead><tr><th style="text-align:left;">内容</th><th style="text-align:left;">含义</th></tr></thead><tbody><tr><td style="text-align:left;">us</td><td style="text-align:left;">用户空间占用 CPU 百分比</td></tr><tr><td style="text-align:left;">sy</td><td style="text-align:left;">内核空间占用 CPU 百分比</td></tr><tr><td style="text-align:left;">ni</td><td style="text-align:left;">用户进程空间内改变过优先级的进程占用CPU百分比</td></tr><tr><td style="text-align:left;">id (idle)</td><td style="text-align:left;">空闲 CPU 百分比</td></tr><tr><td style="text-align:left;">wa</td><td style="text-align:left;">等待输入输出的 CPU 时间百分比</td></tr><tr><td style="text-align:left;">hi (hardware IRQ)</td><td style="text-align:left;">硬中断占用 CPU 的百分比</td></tr><tr><td style="text-align:left;">si (software interrupts)</td><td style="text-align:left;">软中断占用 CPU 的百分比</td></tr><tr><td style="text-align:left;">st (steal time)</td><td style="text-align:left;">当 hypervisor 服务另一个虚拟处理器的时候，虚拟 CPU 等待实际 CPU 的时间的百分比</td></tr></tbody></table><p>第 4 行是物理内存情况：</p><table><thead><tr><th>内容</th><th>含义</th></tr></thead><tbody><tr><td>total</td><td>物理内存总量</td></tr><tr><td>free</td><td>空闲的物理内存量</td></tr><tr><td>used</td><td>使用的物理内存量</td></tr><tr><td>buffers/cached</td><td>用作内核缓存的物理内存量</td></tr></tbody></table><p>第 5 行是交换区内存情况：</p><table><thead><tr><th>内容</th><th>含义</th></tr></thead><tbody><tr><td>total</td><td>交换区总量</td></tr><tr><td>used</td><td>使用的交换区量</td></tr><tr><td>free</td><td>空闲的交换区量</td></tr><tr><td>avail Mem</td><td>可用的内存量</td></tr></tbody></table><p>再往下的信息表，每列信息的含义如下：</p><table><thead><tr><th>内容</th><th>含义</th></tr></thead><tbody><tr><td>PID</td><td>进程ID</td></tr><tr><td>USER</td><td>进程所有者</td></tr><tr><td>PR</td><td>优先级（由内核动态调整，用户不可调整）</td></tr><tr><td>NI</td><td>进程优先级（负值表示高优先级，正值表示低优先级，用户可调整）</td></tr><tr><td>VIRT (virtual memory usage)</td><td>进程所使用的虚拟内存</td></tr><tr><td>RES (resident memory usage)</td><td>进程所使用的物理内存</td></tr><tr><td>SHR (shared memory)</td><td>进程所使用的共享内存</td></tr><tr><td>S (status)</td><td>进程状态（D：不可中断的睡眠状态；R：运行中或可运行状态；S：睡眠状态；T：已跟踪/已停止状态；Z：僵停状态）</td></tr><tr><td>%CPU</td><td>进程使用的 CPU 百分比</td></tr><tr><td>%MEM</td><td>进程使用的物理内存百分比</td></tr><tr><td>TIME+</td><td>进程使用的 CPU 时间总计，单位1/100秒</td></tr><tr><td>COMMAND</td><td>命令名</td></tr></tbody></table><h3 id="查看socket状态" tabindex="-1">查看socket状态 <a class="header-anchor" href="#查看socket状态" aria-label="Permalink to &quot;查看socket状态&quot;">​</a></h3><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;"># -t：显示 tcp socket</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;"># -a：显示所有的</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;"># -l：显示本地打开的端口</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">ss</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> -tal</span></span></code></pre></div><h2 id="文件和目录相关" tabindex="-1">文件和目录相关 <a class="header-anchor" href="#文件和目录相关" aria-label="Permalink to &quot;文件和目录相关&quot;">​</a></h2><div class="tip custom-block"><p class="custom-block-title">已测试系统</p><p>CentOS 7.5、8.2</p></div><h3 id="创建文件" tabindex="-1">创建文件 <a class="header-anchor" href="#创建文件" aria-label="Permalink to &quot;创建文件&quot;">​</a></h3><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">touch</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> 文件名</span></span></code></pre></div><h3 id="创建目录" tabindex="-1">创建目录 <a class="header-anchor" href="#创建目录" aria-label="Permalink to &quot;创建目录&quot;">​</a></h3><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;"># -p 表示当该目录的父目录不存在时，会自动创建</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">mkdir</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> -p</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> 目录路径</span></span></code></pre></div><p>例如：</p><ul><li><code>mkdir -p /opt/disk/software</code> 创建 software 目录</li><li><code>mkdir -p /opt/disk/{software,data}</code> 同时创建 software 和 data 两个目录，甚至可以更多</li></ul><h3 id="删除文件或目录" tabindex="-1">删除文件或目录 <a class="header-anchor" href="#删除文件或目录" aria-label="Permalink to &quot;删除文件或目录&quot;">​</a></h3><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;"># -r 对目录进行递归删除，包含子目录</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;"># -f 删除时不进行确认</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">rm</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> -rf</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> 文件名/目录名</span></span></code></pre></div><p>如果想删除指定目录下除某个文件及某个目录之外的所有文件，可以试试通配符匹配：</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;"># 但使用前先记得开启通配符功能，可以通过 shopt -s 查看是否开启了，on 表示已经开启</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;"># shopt -s extglob</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">rm</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> -rf</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> !</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">target_file</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">|</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">target_dir</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">)</span></span></code></pre></div><h3 id="复制文件或目录" tabindex="-1">复制文件或目录 <a class="header-anchor" href="#复制文件或目录" aria-label="Permalink to &quot;复制文件或目录&quot;">​</a></h3><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">cp</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> 文件名/目录名</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> 目录路径</span></span></code></pre></div><p>例如：</p><ul><li><code>cp test test2</code>： <ul><li>如果 test2 目录存在，表示将 test 目录复制一份到 test2 目录下</li><li>如果 test2 目录不存在，表示将 test 目录在当前目录下复制一份，命名为 test2 目录（cp 命令还可以在复制时实现文件/目录的重命名操作）</li></ul></li></ul><div class="tip custom-block"><p class="custom-block-title">无法执行的强制覆盖</p><p>大多数情况下，命令后带上 <code>-f</code> 参数就代表要强制执行，不需要进行确认输入。可当我们在 cp 命令后加上 <code>-f</code> 命令后，却发现当指定位置下存在同名文件/目录时，它依然会提示我们要进行确认。这是为什么呢？</p><p>输入 <code>alias cp</code> 命令，然后可以看到这么一行输出，它输出的内容在告诉我们 cp 命令实际上是 <code>cp -i</code> 命令的别名 。</p><p><code>alias cp=&#39;cp -i&#39;</code></p><p>它代表着 cp 命令在执行时，实际执行的是 <code>cp -i</code>，<code>-i</code> 表示如果要复制到位置已经有同名文件，会进行确认提示是否覆盖。</p><p>如果你依然想强制覆盖，有两种方法：</p><ol><li>使用原生 cp 命令：<code>/bin/cp -rf 文件名/目录名 目录路径</code></li><li>临时接触 cp 命令别名设置：<code>unalias cp</code></li></ol></div><h3 id="剪切-移动文件或目录" tabindex="-1">剪切/移动文件或目录 <a class="header-anchor" href="#剪切-移动文件或目录" aria-label="Permalink to &quot;剪切/移动文件或目录&quot;">​</a></h3><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">mv</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> 文件名/目录名</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> 目录路径</span></span></code></pre></div><p>例如：<code>mv</code> 命令不需要 <code>-r</code> 命令，即可递归移动子目录</p><ul><li><code>mv test test2</code>： <ul><li>如果 test2 目录存在，表示将 test 目录移动到 test2 目录下</li><li>如果 test2 目录不存在，表示将 test 目录重命名为 test2（mv 命令还可以在剪切/移动时实现文件/目录的重命名操作，所以，虽然 Linux 中没有重命名命令，但你只要在原目录下对文件/目录进行剪切/移动，那就可以实现重命名的效果了）</li></ul></li></ul><h3 id="编辑文件" tabindex="-1">编辑文件 <a class="header-anchor" href="#编辑文件" aria-label="Permalink to &quot;编辑文件&quot;">​</a></h3><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;"># 如果指定位置不存在该名称文件，则在保存时自动新建</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">vi</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> 文件名</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;"># vim 是 vi 的升级版，类似于 notepad 和 notepad++，额外支持语法高亮等功能</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">vim</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> 文件名</span></span></code></pre></div><p>常见操作：</p><ul><li><p>一般模式（默认进入一般模式，此时为只读状态）</p><ul><li><p>按 <code>i</code> 键：进入插入模式，在当前光标左侧插入</p></li><li><p>按 <code>I</code> 键：进入插入模式，在当前光标所在行行首插入</p></li><li><p>按 <code>a</code> 键：进入插入模式，在当前光标右侧插入</p></li><li><p>按 <code>A</code> 键：进入插入模式，在当前光标所在行行尾插入</p></li><li><p>按 <code>o</code> 键：进入插入模式，在当前光标所在行下一行插入</p></li><li><p>按 <code>O</code> 键：进入插入模式，在当前光标所在行上一行插入</p></li><li><p>按 <code>r</code> 键：可以对光标所在位置进行替换，适合替换一个错误字符的情况</p></li><li><p>按 <code>yy</code> 键：复制当前光标所在行</p><ul><li>按 <code>p</code> 键：将按 <code>yy</code> 键复制的内容，粘贴到当前光标的下一行</li></ul></li><li><p>按 <code>:</code> 键：进入底行模式/命令模式</p></li></ul></li><li><p>插入模式</p><ul><li>按 <code>ESC</code> 键：退回到一般模式</li></ul></li><li><p>底行模式/命令模式</p><ul><li>输入 <code>w</code>：保存不退出</li><li>输入 <code>q</code>：退出（如果修改了文件，无法退出，只能使用强制退出）</li><li>输入 <code>wq</code> / <code>x</code>：保存并退出</li><li>输入 <code>q!</code>：强制退出</li></ul></li></ul><h3 id="查找文件" tabindex="-1">查找文件 <a class="header-anchor" href="#查找文件" aria-label="Permalink to &quot;查找文件&quot;">​</a></h3><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">find</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> 目录名</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> -name</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> 文件名关键词</span></span></code></pre></div><p>例如：</p><ul><li><code>find / -name nginx</code>：全盘查找 nginx 文件</li></ul><h2 id="下载工具" tabindex="-1">下载工具 <a class="header-anchor" href="#下载工具" aria-label="Permalink to &quot;下载工具&quot;">​</a></h2><p>cURL 是一个网络数据传输项目，通常说 cURL 是指 curl 命令行工具，它支持 DICT、FILE、FTP、FTPS、Gopher、HTTP、HTTPS、IMAP、IMAPS、LDAP、LDAPS、POP3、POP3S、RTMP、RTSP、SCP、SFTP、SMB、SMBS、SMTP、SMTPS、Telnet 与 TFTP 等协议，而 curl 的底层使用的是 libcurl 库，libcurl 与 curl 组成了 cURL 项目。</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;"># -f(--fail)：表示在服务器错误时，阻止一个返回的表示错误原因的 HTML 页面，而由 curl 命令返回一个错误码 22 来提示错误</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;"># -s(--silent)：不显示错误和进度信息</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;"># -S(--show-error)：指定只输出错误信息，通常与 -s 一起使用</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;"># -L(--location)：让 HTTP 请求跟随服务器的重定向，curl 默认不跟随重定向</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">curl</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> -fsSL</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> https://get.docker.com</span></span></code></pre></div>`,120);function B(s,S,E,T,U,w){const p=t("Badge"),d=r,k=t("ClientOnly");return e(),c("div",null,[h("h1",P,[l("个人常用 Linux 命令 "),n(p,{type:"warning",text:"持续更新"}),l(),q]),n(k,null,{default:g(()=>{var i,a;return[(((i=s.$frontmatter)==null?void 0:i.aside)??!0)&&(((a=s.$frontmatter)==null?void 0:a.showArticleMetadata)??!0)?(e(),y(d,{key:0,article:s.$frontmatter},null,8,["article"])):F("",!0)]}),_:1}),_])}const I=o(A,[["render",B]]);export{R as __pageData,I as default};
